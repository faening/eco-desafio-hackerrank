import java.io.*;
import java.math.*;
import java.security.*;
import java.text.*;
import java.util.*;
import java.util.concurrent.*;
import java.util.function.*;
import java.util.regex.*;
import java.util.stream.*;
import static java.util.stream.Collectors.joining;
import static java.util.stream.Collectors.toList;

class Result {

    /*
     * Complete the 'gameOfThrones' function below.
     *
     * The function is expected to return a STRING.
     * The function accepts STRING s as parameter.
     */

    public static String gameOfThrones(String s) {
    // Write your code here
        List<String> sList = new ArrayList<String>();

        for (int i = 0; i < s.length(); i++) {
            sList.add(String.valueOf(s.charAt(i)));
        }

        boolean isAnagram = true;
        int singleCharacter = 0;

        while (isAnagram && sList.size() > 0) {
            String c = sList.get(0);
            sList.remove(0);

            for (int i = 0; i < sList.size(); i++) {
                if (c.equals(sList.get(i))) {
                    sList.remove(i);
                    break;
                }

                if (i == sList.size() - 1) {
                    if (singleCharacter == 0) {
                        singleCharacter++;
                    } else  {
                        isAnagram = false;
                    }
                }
            }
        }

        return isAnagram ? "YES" : "NO";

    }

}

public class Solution {
    public static void main(String[] args) throws IOException {
        BufferedReader bufferedReader = new BufferedReader(new InputStreamReader(System.in));
        BufferedWriter bufferedWriter = new BufferedWriter(new FileWriter(System.getenv("OUTPUT_PATH")));

        String s = bufferedReader.readLine();

        String result = Result.gameOfThrones(s);

        bufferedWriter.write(result);
        bufferedWriter.newLine();

        bufferedReader.close();
        bufferedWriter.close();
    }
}
